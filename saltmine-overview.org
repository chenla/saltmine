#   -*- mode: org; fill-column: 60 -*-
#+TITLE: Saltmine Overview
#+STARTUP: showall
#+PROPERTY: filename
  :PROPERTIES:
  :CUSTOM_ID: 
  :Name:      /home/deerpig/proj/chenla/saltmine/saltmine-overview.org
  :Created:   2017-05-26T17:36@Prek Leap (11.642600N-104.919210W)
  :ID:        82d92c66-ce35-4cfc-94cd-c48cd6579b53
  :VER:       549067083.896693001
  :GEO:       48P-491193-1287029-15
  :BXID:      proj:XRC7-4777
  :END:
#+INCLUDE: ./inc/head.org
#+INCLUDE: ./inc/macros.org

{{{breadcrumbs}}}

#+HTML: <div class="outline-2" id="meta">
| *Author*  | Brad Collins <brad@chenla.org>             |
| *Date*    | {{{time(%Y-%m-%d %H:%M:%S)}}}              |
#+HTML: </div>

#+TOC: headlines 4

* Introduction


Saltmine is a software stack designed to provide an ITC
infrastructure for a scalable distributed civilization.  Up
until now it has always been seen as a collection of
software applications.  But we're now stepping back and
realizing it needs a broader vision.

So, like our reimagined Bento Box, Saltmine is no longer
simply code, but a set of specifications, data structures
and requirements for delivering a broad set of defined
functionality.  We will likely have a set of uniform APIs,
but other than that it won't matter what actual software
is used to get the job done.  It could be something fast and
close to the the metal in C or Rust, or fantastically rich
code written in Lisp.  It could be written in javascript
or perl or whatever.  It can be off the shelf applications
that are used to provide different parts of the stack -- it
doesn't matter so long as it get's the job done.

---

d9d is the network built out of nodes using saltmine and
bento.  

d9d spins up containers as close to you as possible, that
then allow you to pick up any device and use it as if it
were your own device.

what I'm still unsure about is if we can use IPFS -- but
ipfs is file storage that distributes files across a
network.

saltmine is processing, storage, and messaging 

but it's also about breaking up collections of information
into different overlapping pieces, sometimes scattering
them, sometimes consolidating them.

could we treat containers just like files in IPFS, but each
node that stores something can then fire it up as a
container....

  - knows what you are
  - knows where you are
  - knows who you are
  - knows what role you are in

  - collects surrounding context
    - what you are doing
    - environment, light, temp, humidity, air pressure,
      gravity, noise.
    - identifies who is around you
    - searches for information related to all of these things


  - looks for devices near you to run on
  - looks for displays and interface devices near you

  - keeps track of how many copies of everything there are
  - 

---

#+begin_comment
Still can't seem to get my groove back....
#+end_comment


if we think of everything in saltmine as if it were an ERP
process -- everything in the process of becoming something
else.....  what does that even mean? 

at the same time everything becomes part of the map, which
is a DAG but the graph as map is just how we pull together
context that triggers and informs processes, and a map of a
process is a thread running through the map.

maps represent holonic structures, and a process is just a
segment of a causal chain that propagates through the map,
changing it like light propagating across a light cone.

rule sets determine how we filter and see maps in different
ways, and find things, nodes, patterns etc.  but they also
govern how processes play out -- a rule set defines intent,
or at the least reflects past experience.


where things get interesting is when two graphs come into
contact -- since there are private, shared and public layers
or segments or subnets or whatever, so there is no way of
knowing how one graph is going to fit together with another.

there will be redundancies, gaps and conflicts between them,
all of which are important -- knowing that someone else
knows the same thing, for example, is useful information --
so is knowing that something you know is missing in another
graph. 

a horcrux is constantly integrating new information into its
graph, this is the process of establishing links that weave
new information in the form of relationships.  Most of this
will have to be automated through rule sets which will
constantly need to adapt as they do so.  So indexing is not
enough, each item has to be evaluated to see how it fits
into the graph, and then those new relationships will
propagate throughout the graph so if you change one node,
then the other nodes it is connected to might need to be
changed as well.

it won't only be external things that trigger reevaluation,
it will also change when we use our own graphs.  Every
time you view something that information will recome part of
the graph as well.

and like the brain we need to include more than a
relationship, but also the magnitude and and weight of the
relationship and since these things are not static and
change over time those changes must be part of version
control so you can literally rewind a state of mind to any
moment in the past.....

I keep wondering about magnitude -- I understand certainty,
but magnitude.... I mean, in a sense it makes sense --
perhaps the magnitude of a sound -- was it loud or soft? was
a smell strong or faint.  these correspond directly to
survival on the savannah.  but does this also pertain to
things like a feeling -- there is magnitude for love,
beauty, fear, anger, hate so perhaps magnitude largely
records the memory of the reaction of the limbic system.

In /Ancillary Justice/ there was a nice line about why ships
had feelings -- that without feelings it would be exhausting
to have to deal with everything that is weighted the same.
And there is value to placing weight to things that may be
more valuable than to other things.  It's a type of filter
that also acts as a motivator and recording such things in
memory is an important part of our memories.... am I
projecting too much onto magnitude here?  perhaps, but the
idea makes a lot of sense.  remembering images, sounds,
events, objects etc without remembering the corresponding
feeling associated with that memory isn't very useful.

how to incorporate this into metadata is another story -- is
it part of the record, or part of the index?  when you share
a memory with someone, do you share the feeling as well, or
are you just sharing the image or sound or shape or whatever
-- afterall those are not your feelings and you will have
different feelings associated with the information in that
node when you experience it because it will be in a
different context.

different parts of the brain are responsible for processing
different kinds of feelings -- so there is more than memory
here, there is no small amount of machinery in addition to
the limbic engine -- a lot of feelings are a lot more
complex and abstract than the limbic system provides.


but magnitude only tells the strength of something, not what
it is -- if something is beautiful, you are seeing a pattern
that part of your brain recognizes as and members as being
beautiful and then triggers some kind of chemical response
that reinforces that feeling.

so in additional to simple thesaurus relationships we will
need limbic relationships as well and defined patterns that
trigger recognition of them -- which then triggers behaviors
to pay attention to something, or see it as a threat, or
attractive etc.

/spatial memory/ 

short term memory

working memory:

  - phonological loop :: consists of two parts: a
       /short-term phonological store/ with auditory memory
       traces that rapidly decay and an /articulatory
       rehearsal component/.
  - visuo-spatial sketchpad :: a store that holds visual
       information for manipulation. -- 7 plus or minus 2.
    - The /visual cache/ stores information about form and color.
    - The /inner scribe/ deals with spatial and movement information.
  - central executive ::  a set of cognitive processes for
       the cognitive control of behavior: selecting and
       successfully monitoring behaviors that facilitate the
       attainment of chosen goals. Executive functions
       include basic cognitive processes such as attentional
       control, cognitive inhibition, inhibitory control,
       working memory, and cognitive flexibility. Higher
       order executive functions require the simultaneous
       use of multiple basic executive functions and include
       planning and fluid intelligence (i.e., reasoning and
       problem solving).
  - episodic buffer ::  is a third slave system, dedicated
       to linking information across domains to form
       integrated units of visual, spatial, and verbal
       information with time sequencing (or chronological
       ordering), such as the memory of a story or a movie
       scene. The episodic buffer is also assumed to have
       links to long-term memory and semantic meaning.


this leads us to how to develop /episodic-autobiographical
memory/ (EAM) which I would assume to be somewhat
self-contained networks that link together all the different
elements that make up a "story" of something that happened.


In humans, memories are not static, they change over time as
we experience new things and draw new conclusions about what
we remember, and as newer memories supercede or over write
parts of episodic memories.

It is important for our memories to change over time, but it
would be useful if we could rewind memories to past times so
that we could see the surrounding context of the original
memory -- this would help correct memory drift over long
periods of time.










