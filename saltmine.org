#+TITLE:  Saltmine
#+AUTHOR: Brad Collins
#+EMAIL: brad@chenla.la
#+PROPERTY: header-args    :results drawer  :tangle saltmine.el

* Introduction

This will be a literate program called saltmine, with a companion
emacs application called salt4e.

Saltmine will either build it's own or use an existing graph-database
that will index bmf orgmode files.

Salt4e (saltmine 4 emacs) will provide a helm interface to lookup
content in saltmine, keep a local index of all ids used by an orgmode
protocol that will make it possible to link between things using links
to bxids in org files.  Salt4e will also provide a very basic version
control system.

* Salt4e Notes


define a new org protocol  'bmf'

  :BXID:      proj:GRO44-6794

look up 'proj' in LINK and expand which gives us a local path to the
tspace index for the bxid.

The index is very simple:

  ("GR044-6794.546735262.598557129" 
   "Prolegomena_References" 
   "22d37595-e4ec-4b44-87c2-73e96ed916eb")

Search list for GR044-6794 which will return all triples for GR044-6794.

Then sort by the car and take the top one which will be most recent.

Finally grab the id for top one which, is then used to go to the burr
using the org id function.

So:

   bmf:/proj/GR044-6794

Goes to the latest version of the burr.  But you can also link to a
specific version by appending the version/time stamp.

   bmf:/proj/GR044-6794.546735262.598557129

--------

Then we will need:

  - function for indexing all of the bxids

  - version control -- which means you commit a burr which
    copies the old version into an archive and then gives
    a new id to the new version.  

    Do we want a commit string?  If we want to integrate the
    concept of literate version control -- where the comit
    string is a burr in its own right -- and can be a commit
    string, gloss, or scholia all of which are tied to
    specific versions, but glosses and scholia can be moved
    to new versions -- which will make the version process
    more complex, but this is the only way we can make this
    work -

    scholia can be inline, block or burr level -- so burr
    level scholia don't need to migrate, they are comments
    on the whole burr, but anything pointing to block or
    inline content must be tied to specific versions.

  - helm interface for looking up burrs by bxid and
    custom_id should be able to insert custom_id or bxid at
    point...

* Saltmine Server

Once this basic lookup is done we can start working on the
external database 


* File Header


#+begin_src emacs-lisp :tangle saltmine.el
;;; saltmine.el  -- 
;;; Copyright (C) 2017 Brad Collins

;; This program is available under the same terms as GNU Emacs.

;; This File IS NOT part of GNU Emacs

;; This is free software; you can redistribute it and/or modify it
;; under the terms of the GNU General Public License as published by
;; the Free Software Foundation; either version 2, or (at your option)
;; any later version.

;; This is distributed in the hope that it will be useful, but WITHOUT
;; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
;; or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
;; License for more details.

;; You should have received a copy of the GNU General Public License
;; along with GNU Emacs; see the file COPYING.  If not, write to the
;; Free Software Foundation, Inc., 59 Temple Place - Suite 330,
;; Boston, MA 02111-1307, USA.

;;; Commentary:
;;

#+end_src



* Provide and Finish

#+begin_src emacs-lisp :tangle saltmine.el
(provide 'saltmine)

;;; saltmine.el ends here

#+end_src

